<html>
<head>
   <meta charset="utf-8"/>
   <!-- // jaco snippet -->
   // <script type="text/javascript">
   // (function(e, t) {
   //     function r(e, t) {
   //         e[t] = function() {
   //             e.push([ t ].concat(Array.prototype.slice.call(arguments, 0)));
   //         };
   //     }
   //     var n = "JacoRecorder";
   //     (function(e, t, i, s) {
   //         if (!i.__VERSION) {
   //             e[n] = i;
   //             var o = [ "init", "identify", "startRecording", "stopRecording", "removeUserTracking", "setUserInfo" ];
   //             for (var u = 0; u < o.length; u++) r(i, o[u]);
   //             i.__VERSION = .9, i.__INIT_TIME = 1 * new Date;
   //             var a = t.createElement("script");
   //             a.async = !0, a.setAttribute("crossorigin", "anonymous"), a.src = s;
   //             var f = t.getElementsByTagName("head")[0];
   //             f.appendChild(a);
   //         }
   //     })(e, t, e[n] || [], "//recorder-assets.getjaco.com/recorder.js");
   // }).call(window, window, document), window.JacoRecorder.push([ "init", "7365b8c2-6d60-4068-9756-70cea2270815", {} ]);
   // </script>
   <title>
      Maurann Stein
   </title>
   <link rel="icon" type="image/png" href="../assets/images/favicon.ico">
   <meta name="viewport" content="width=device-width, minimumscale=1.0, maximum-scale=1.0" />
   <meta name="viewport" content="width=device-width, target-densitydpi=device-dpi, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes" /> 
   <link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
   <link rel='stylesheet' media='screen and (min-width: 1px)' href='../assets/css/style.css' />
   <!-- <meta property="og:type" content="website">
   <meta property="og:title" content="Artificial Art">
   <meta name="description" content="Artificial Art is an exhibition that explores the work created by the anonymous workers commissioned via Amazon’s Mechanical Turk. All artworks presented in the event will be offered for sale at the live auction closing the exhibition.">
   <meta property="og:url" content="http://www.artificialart.net/">
   <meta property="og:site_name" content="Artificial Art">
   <meta property="og:locale" content="en_US"> -->
</head>

<body>
   <main class="project-page">
      <header>
         <ul>
            <li>12:34pm&nbsp;&nbsp;|&nbsp;&nbsp;</li>
            <li><a href="../index.html">Selected Projects</a></li>
            <li>&nbsp;&nbsp;|&nbsp;&nbsp;Partly Cloudy</li>
         </ul>
      </header>
      <section class="AAR">
         <div class="title-teaser">
            <h1>Anti Alias Regular</h1>
            <h3>
               A multi-platform investigation of low-resolution type when rendered on a high-resolution screen.
            </h3>
         </div>
         <article>
            <figure class="featured-image">
               <img src="../assets/images/aa1.jpg"/>
            </figure>
            <div class="six-columns">
               <h3>A short intro to monospaced type</h3>
               <p>
                  In 1829, William Austin Burt patented a machine called the “Typographer”, which was later referred to as the typewriter. Those early devices were not designed to create elegant layouts; they were just a way to get words on a page. Early (and cheap) typewrites could only move the same distance forward with each letter typed. This led to the necessity of monospaced typefaces: letters and characters that each occupy the same amount of horizontal space. Typefaces like Century Schoolbook, Courier and Letter Gothic were widely used at the time.
               </p>
               <p>
                  With the advent of the computer, the 80’s were the golden years of monospaced typography. 8&times;8 pixel mono-spaced fonts on low-resolution 8-bit home computer displays were in common use because of the computer's extremely limited graphical capabilities. The screen layout was addressed as a regular grid of tiles, each of which could be set to display a character by indexing into the hardware's character map. Some systems allowed colored text to be displayed by varying the foreground and background color for each tile, however these were typically limited to a single console font.
               </p>
               <p>
                  With time, technological advancements offered more memory availability and increased the graphical capabilities of computer displays. At this point, more typefces were digitized and were introduced to computers.
               </p>
            </div>
            <div class="five-columns shift-one">
               <div class="six-columns clear">
                  <figure>
                     <img src="../assets/images/AAR_typewriter.jpg" class="twin"/>
                     <figcaption>
                        Underwood Typewriter
                     </figcaption>
                  </figure>
               </div>
               <figure>
                  <img src="../assets/images/AAR_new-alphabet.jpg" class="twin"/>
                  <figcaption>
                     Wim Crowel’s <i>New Alphabet</i> (1967): embracing the limitations of early data display screens and phototypesetting equipment. The typeface was based on a grid of 5 by 9 units with 45º corners and contained only horizontal and vertical strokes.
                  </figcaption>
               </figure>
            </div>
         </article>
         <article>
            <div class="five-columns">
               <figure>
                  <img src="../assets/images/AAR-antialiasedO.png"/>
                  <figcaption>
                     Examples of unanti-aliased and anti-aliased “o”.
                  </figcaption>
               </figure>
            </div>
            <div class="six-columns shift-one">
               <h3>Anti-aliasing</h3>
               <p>
                  As computer’s graphical capabilities improved, designers and programmers developed methods trying to perfect the ways in which typography is rendered on screen. To minimize the difference between digitized and original typography, a software technique called anti-aliasing was invented, which diminishes “jagged” lines that should be smooth. These lines occur because the output device, the monitor or printer, doesn’t have a high enough resolution to represent a smooth line. Anti-aliasing reduces the prominence of stairstep-like lines by surrounding the stairsteps with shades of gray.
               </p>
            </div>  
         </article>
         <article>
            <figure>
               <img src="../assets/images/AAR-6building-blocks.png"/>
            <figure>
         </article>
         <article>
            <div class="six-columns">
               <h3>Anti Alias Regular building blocks</h3>
               <p>
                  For my typographic experiment, I wanted to see what a blown-up anti-aliased type can look like when rendered on high resolution screens. I wanted to try to create a new displayface that celebrates the gap between print and digital by presenting the computational workarounds at the foreground.
               </p>
               <p>
                  When I started to sketch, I realized that there is no way to construct typefaces with different opacities in font-design softwares (Fontlab / Robofont), and that led me to explore other creative alternatives. I came up with my own workaround to create varying opacities still using traditional glygh paths: the family’s building blocks are composed of diagonal lines varying in width and density; the thicker and more dense the lines are, the darker the area looks from a distance.
               </p>
            </div>
            <div class="five-columns shift-one">
               <figure>
                  <img src="../assets/images/AAR-letters.gif"/>
               </figure>
            </div>
         </article>
         <article>
            <div class="eight-columns center">
               <h3>Type specimen poster</h3>
               <p>
                  After I flushed out the Anti Alias glyph palette, I designed a double-sided type specimen poster enclosed in a folder: the front shows all of the Anti Alias charachters set in different sizes and the back shows a big, nocked-out letter A.
               </p>
            </div>
            <div class="twelve-columns">
               <figcaption>Front view</figcaption>
            </div>
            <div class="six-columns">

               <figure>
                  <img src="../assets/images/aa4.jpg"/>
               </figure>
            </div>
            <div class="six-columns clear">
               <figure>
                  <img src="../assets/images/aa2.jpg"/>
               </figure>
            </div>
            <div class="six-columns">
               <figure>
                  <img src="../assets/images/aa5.jpg"/>
               </figure>
            </div>
            <div class="six-columns clear">
               <figure>
                  <img src="../assets/images/aa6.jpg"/>
               </figure>
            </div>
            <div class="twelve-columns">
               <figcaption class="hide-at-tablet">Back view</figcaption>
            </div>
            <div>
               <figure>
                  <img src="../assets/images/aa3.jpg"/>
               </figure>
            </div>
         </article>
         <article>
            <div class="five-columns">
               <h3>Type specimen website</h3>
               <p>
                  I then wanted to text my typeface on screen, so I designed a website for it. I wrote a simple algorithm that pulls nouns, verbs, adjectives and adverbs from buckets of words I came up with, and then joins them to create clumsy sentences with every click. The font-size changes according to the length of each sentence (the longer it is, the smaller the charachters).
               </p>
               <a target="_blank" class="visit-site" href="http://maurannstein.com/anti-alias/">
                  Visit the type specimen site
               </a>
            </div>
            <div class="six-columns shift-one clear website-video">
               <figure>
                  <a target="_blank" class="visit-site" href="http://maurannstein.com/anti-alias/"><img src="../assets/images/AAR-websitebrowser.png"/></a>
                  <video autoplay loop>
                    <source src="../assets/videos/AAR-website.mp4" type="video/mp4">
                    <source src="../assets/videos/AAR-website.ogg" type="video/ogg">
                     Your browser does not support HTML5 video.
                  </video>
               </figure>
            </div>
            <div class=""></div>
         </article>
      </section>
      <section class="other-featured">
         <article>
            <h2>more selected projects</h2>
            <div class="four-columns">
               <a href="./draw-me-a-letter">
                  <figure>
                     <img id="comp-content" src="../assets/images/DMAL.gif"/>
                     <img src="../assets/images/macbook.png"/>
                  </figure>
                  <p>Draw Me A Letter</p>
               </a>
            </div>
            <div class="four-columns">
               <a href="./artificial-art">
                  <figure>
                     <img src="../assets/images/ArtificialArt-inBrowser.gif"/>
                  </figure>
                  <p>Artificial Art</p>
               </a>
            </div>
            <div class="four-columns">
               <a href="./exquisite-corpse">
                  <figure>
                     <img src="../assets/images/EC-logo2.gif"/>
                  </figure>
                  <p>Exquisite Corpse</p>
               </a>
            </div>
         </article>
      </section>
      <section class="all-other" id="projects"></section>
   </main>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script type="text/javascript" src="../assets/js/index.js"></script>
</body>
</html>