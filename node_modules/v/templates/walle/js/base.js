var eve = eve || {},
    HOST = "http://api.mobile.meituan.com/group/v1/"

eve.DEBUG = false

Backbone.emulateHTTP = true
Backbone.emulateJSON = true

;(function() {
    var toQueryString = function(o) {
            var ret = [], p, encode = encodeURIComponent
            for (p in o) {
                if (o.hasOwnProperty(p)) ret.push(encode(p) + '=' + encode(o[p]))
            }
            return ret.join('&')
        },
        beacon = function(msg) {
            msg.site = msg.site || 'eve'
            msg.level = msg.level || 'erro'
            msg.url = msg.url || location.href
            msg.type = "jsdebug"

            var img = new Image()
            img.src = 'http://fe.meituan.net/_.gif?' + toQueryString(msg) + Date.now()
        },
        /*
         * @description log your error
         *
         * @param {Object} custom debug info
         *
         * info: {
         *      msg: your msg
         *      level: your debug level
         *      url: the path of this bug
         *      site: your site
         *      line: lineNumber
         * }
         */
        log = function(info) {
            if (!eve.DEBUG) {
                beacon(info)
                // beacon(info)
            } else {
                console.error(info)
            }
        },
        /*
         * @description wrapper your method with try catch
         *
         * @param {Function} method your method to run
         * @param {Object} custom debug info
         *
         * info: {
         *      msg: your msg
         *      level: your debug level
         *      url: the path of this bug
         *      site: your site
         * }
         */
        run = function(method, info) {
            try {
                method()
            } catch (err) {
                info = info || {}
                log({
                        msg: (info.msg + err.stack),
                        level: (info.level || "error"),
                        url: (info.href || location.href),
                        site: (info.site || "eve")
                })
            }
        }

    _.extend(eve, {
        run: run,
        log: log
    })
} ())

if (!eve.DEBUG) {
    window.onerror = function(errorMsg, url, lineNumber) {
        eve.log({
            level: "fatal",
            msg: errorMsg,
            site: "eve",
            url: url,
            line: (lineNumber || null),
        })
        return true
    }
}
