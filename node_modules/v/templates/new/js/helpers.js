define(function(require, exports, module) {
    'use strict'

    var Handlebars = require('Handlebars')

    // c-list helper
    Handlebars.registerHelper('c-list', function(context, block) {
        return '<ul class="c-list">' + context.map(function(item) {
            return "<li>" + block(item) + "</li>"
        }).join("\n") + "</ul>"
    })

    Handlebars.registerHelper('c-list', function(context, block) {
        return '<ul>' + context.map(function(item) {
            return block(item)
        }).join('\n') + '</ul>'
    })

    Handlebars.registerHelper('if', function(conditional, options) {
        if(conditional) {
            return options.fn(this);
        } else {
            return options.inverse(this);
        }
    })
    Handlebars.registerHelper('if-greater-zero', function(conditional, options) {
        if(conditional && conditional.length > 0) {
            return options.fn(this);
        } else {
            return options.inverse(this);
        }
    })
    Handlebars.registerHelper('timelist', function(context, options){
        return '<ul class="time-list">' + context[this].map(function(mov) {
            return '<li class="schedule ' + isTimeValid(mov.time) + '">' + mov.time + '</li>'
        }).join('\n') + '</ul>'
    })
    // TODO 这样做就失去了模板的意义
    Handlebars.registerHelper('menu', function(context, options) {
            var today = new Date(),
                tomorrow = new Date(new Date().setDate(today.getDate() + 1)),
                afterTomorrow = new Date(new Date().setDate(today.getDate() + 2)),
                formatDate = function(d) {
                    return (d.getMonth() + 1) + '-' + d.getDate()
                },
                dateObj = {
                    today: '今天（' + formatDate(today) + '）',
                    tomorrow: '明天（' + formatDate(tomorrow) + '）',
                    afterTomorrow: '后天（' + formatDate(afterTomorrow) + '）'
                },
                cur = context

            return '\
                <nav>\
                    <div id="today" ' + (cur === 'today' ? 'class="active"' : '') + '>' + dateObj.today + '</div>\
                    <span>|</span>\
                    <div id="tomorrow" ' + (cur === 'tomorrow' ? 'class="active"' : '') + '>' + dateObj.tomorrow + '</div>\
                    <span>|</span>\
                    <div id="afterTomorrow" ' + (cur === 'afterTomorrow' ? 'class="active"' : '') + '>' + dateObj.afterTomorrow +'</div>\
                </nav>\
            '
    })

    function isTimeValid(str) {
        var arr = str.split(':'),
            now = new Date(),
            cur = now.getHours()*60 + now.getMinutes()

        return ((parseInt(arr[0], 10) * 60 + parseInt(arr[1], 10)) >= cur ? 'valid' : '')
    }
})
